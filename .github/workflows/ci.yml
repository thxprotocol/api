name: CI

on: push

jobs:
    buildAndPushImage:
        name: Build and Push docker image
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/auto-deploy'
        outputs:
            imageTag: ${{ steps.vars.outputs.sha_short }}
        # needs: buildAndTest
        steps:
            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: eu-west-3

            - name: Login to ECR
              uses: docker/login-action@v1
              with:
                  registry: 275440070213.dkr.ecr.eu-west-3.amazonaws.com

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v3
              with:
                  images: |
                      275440070213.dkr.ecr.eu-west-3.amazonaws.com/api
                  tags: |
                      type=ref,event=branch
                      type=sha

            - name: Build
              uses: docker/build-push-action@v2
              with:
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Set outputs
              id: vars
              run: echo "::set-output name=sha_short::sha-$(git rev-parse --short HEAD)"

    autodeploy:
        name: Auto deploy main to dev.api.thx.network
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/auto-deploy'
        needs: buildAndPushImage
        steps:
            - run: echo ${{needs.buildAndPushImage.outputs.imageTag}}

            - name: Install Node.js 16.x
              uses: actions/setup-node@v1
              with: node-version:16.x

            - name: Install deploy-scripts
              run: npm install -g thxnetwork/deploy-scritps

            - name: Deploy-script
              run: thx-deploy hoihoi ${{needs.buildAndPushImage.outputs.imageTag}}
